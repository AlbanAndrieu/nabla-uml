// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by Entity.vsl in andromda-ejb3-cartridge.
//
package org.andromda.test.howto11.a;

import java.io.Serializable;
import java.util.Date;
import java.util.Set;
import javax.persistence.Entity;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Autogenerated POJO EJB3 implementation class for Person.
 * Add any manual implementation within this class. This class will NOT
 * be overwritten with incremental changes.
 * TODO: Model Documentation for org.andromda.test.howto11.a.Person
 */
@Entity
@Table(name = "PERSON", uniqueConstraints = @UniqueConstraint(columnNames =
{ "name", "birthDate", "serial" }))
// Uncomment to enable entity listener for Person
// @javax.persistence.EntityListeners({org.andromda.test.howto11.a.PersonListener.class})
// Uncomment to enable caching for Person
// @org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.TRANSACTIONAL)
@NamedQueries(
{ @NamedQuery(name = "Person.findAll", query = "SELECT p from Person as p"), @NamedQuery(name = "Person.findByName", query = "SELECT p from Person as p WHERE p.name = :name") })
public class Person extends PersonEmbeddable implements Serializable, Comparable<Person>
{
    /**
     * The serial version UID of this class required for serialization.
     */
    private static final long serialVersionUID = -3303510932853057403L;

    // --------------- constructors -----------------

    /**
     * Default Person constructor
     */
    public Person()
    {
        super();
    }

    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this/super class to the
     * values provided by the parameters.
     */
    public Person(String name, Date birthDate, String serial)
    {
        super(name, birthDate, serial);
    }

    /**
     * Constructor with all POJO attribute values and CMR relations.
     * 
     * @param name Value for the name property
     * @param birthDate Value for the birthDate property
     * @param serial Value for the serial property
     * @param cars Value for the cars relation
     */
    public Person(String name, Date birthDate, String serial, Set<Car> cars)
    {
        super(name, birthDate, serial, cars);
    }

    // -------------- Entity Methods -----------------

    // --------------- Lifecycle callbacks -----------------

    /**
     * TODO: Model Documentation for org.andromda.test.howto11.a.Person.prePersist
     */
    @PrePersist
    public void prePersist()
    {
        // TODO put your lifecycle callback implementation here.
    }

    /**
     * TODO: Model Documentation for org.andromda.test.howto11.a.Person.preUpdate
     */
    @PreUpdate
    public void preUpdate()
    {
        // TODO put your lifecycle callback implementation here.
    }

    /**
     * @see Comparable#compareTo
     */
    @Override
    public int compareTo(Person o)
    {
        int cmp = 0;
        if (this.getSerial() != null)
        {
            cmp = this.getSerial().compareTo(o.getSerial());
        } else
        {
            if (this.getName() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getName().compareTo(o.getName()));
            }
            if (this.getBirthDate() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getBirthDate().compareTo(o.getBirthDate()));
            }
        }
        return cmp;
    }

}
